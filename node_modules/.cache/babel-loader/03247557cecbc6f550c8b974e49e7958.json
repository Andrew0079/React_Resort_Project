{"ast":null,"code":"var _jsxFileName = \"/Users/andrasstrublics/Documents/Code_Repo/Node_Projects/React_Applications/resort/src/context.js\";\nimport React from \"react\";\nimport items from './data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      return tempRooms.find(room => room.slug === slug);\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      console.log(name, value);\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state;\n      let tempRooms = [...rooms]; // transform values\n      // get capacity\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== \"all\") tempRooms = tempRooms.filter(room => room.type === type); // filter by capacity\n\n      if (capacity !== 1) tempRooms = tempRooms.filter(room => room.capacity >= capacity); // filter by price\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) tempRooms = tempRooms.filter(room => room.breakfast === true); //filter by pets\n\n      if (pets) tempRooms = tempRooms.filter(room => room.pets === true);\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData {}\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    return items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      return { ...item.fields,\n        images,\n        id\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport const withRoomConsumer = Component => {\n  return props => {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }\n    })));\n  };\n};\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/andrasstrublics/Documents/Code_Repo/Node_Projects/React_Applications/resort/src/context.js"],"names":["React","items","RoomContext","createContext","RoomProvider","Component","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","find","room","handleChange","event","target","value","checked","name","console","log","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;;AAGA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,aAAa,EAAE,EAHX;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,IAAI,EAAE,KALF;AAMJC,MAAAA,QAAQ,EAAE,CANN;AAOJC,MAAAA,KAAK,EAAE,CAPH;AAQJC,MAAAA,QAAQ,EAAE,CARN;AASJC,MAAAA,QAAQ,EAAE,CATN;AAUJC,MAAAA,OAAO,EAAE,CAVL;AAWJC,MAAAA,OAAO,EAAE,CAXL;AAYJC,MAAAA,SAAS,EAAE,KAZP;AAaJC,MAAAA,IAAI,EAAE;AAbF,KAD+B;;AAAA,SA0CvCC,OA1CuC,GA0C7BC,IAAI,IAAI;AACd,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAf,CAAhB;AACA,aAAOe,SAAS,CAACC,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACH,IAAL,KAAcA,IAArC,CAAP;AACH,KA7CsC;;AAAA,SA+CvCI,YA/CuC,GA+CxBC,KAAK,IAAI;AACpB,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAAChB,IAAP,KAAgB,UAAhB,GAA6BgB,MAAM,CAACE,OAApC,GAA8CF,MAAM,CAACC,KAAnE;AACA,YAAME,IAAI,GAAGH,MAAM,CAACG,IAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBF,KAAlB;AAEA,WAAKK,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQF;AAAV,OAAd,EAAiC,KAAKM,WAAtC;AACH,KAtDsC;;AAAA,SAwDvCA,WAxDuC,GAwDzB,MAAM;AAChB,UAAI;AAAE3B,QAAAA,KAAF;AAASI,QAAAA,IAAT;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA,KAAzB;AAAgCG,QAAAA,OAAhC;AAAyCC,QAAAA,OAAzC;AAAkDC,QAAAA,SAAlD;AAA6DC,QAAAA;AAA7D,UAAsE,KAAKb,KAA/E;AAEA,UAAIgB,SAAS,GAAG,CAAC,GAAGf,KAAJ,CAAhB,CAHgB,CAIhB;AACA;;AACAK,MAAAA,QAAQ,GAAGuB,QAAQ,CAACvB,QAAD,CAAnB;AACAC,MAAAA,KAAK,GAAGsB,QAAQ,CAACtB,KAAD,CAAhB,CAPgB,CAQhB;;AACA,UAAIF,IAAI,KAAK,KAAb,EAAoBW,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiBZ,IAAI,IAAIA,IAAI,CAACb,IAAL,KAAcA,IAAvC,CAAZ,CATJ,CAWhB;;AACA,UAAIC,QAAQ,KAAK,CAAjB,EAAoBU,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiBZ,IAAI,IAAIA,IAAI,CAACZ,QAAL,IAAiBA,QAA1C,CAAZ,CAZJ,CAchB;;AACAU,MAAAA,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAkBZ,IAAI,IAAIA,IAAI,CAACX,KAAL,IAAcA,KAAxC,CAAZ,CAfgB,CAgBhB;;AACAS,MAAAA,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAkBZ,IAAI,IAAIA,IAAI,CAACa,IAAL,IAAarB,OAAb,IAAwBQ,IAAI,CAACa,IAAL,IAAapB,OAA/D,CAAZ,CAjBgB,CAkBhB;;AACA,UAAIC,SAAJ,EAAeI,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiBZ,IAAI,IAAIA,IAAI,CAACN,SAAL,KAAmB,IAA5C,CAAZ,CAnBC,CAqBhB;;AACA,UAAIC,IAAJ,EAAUG,SAAS,GAAGA,SAAS,CAACc,MAAV,CAAiBZ,IAAI,IAAIA,IAAI,CAACL,IAAL,KAAc,IAAvC,CAAZ;AAEV,WAAKc,QAAL,CAAc;AAAEzB,QAAAA,WAAW,EAAEc;AAAf,OAAd;AACH,KAjFsC;AAAA;;AAiBvC;AAEAgB,EAAAA,iBAAiB,GAAG;AAChB,QAAI/B,KAAK,GAAG,KAAKgC,UAAL,CAAgBtC,KAAhB,CAAZ;AACA,QAAIQ,aAAa,GAAGF,KAAK,CAAC6B,MAAN,CAAcZ,IAAD,IAAUA,IAAI,CAACgB,QAAL,KAAkB,IAAzC,CAApB;AACA,QAAIzB,QAAQ,GAAG0B,IAAI,CAACC,GAAL,CAAS,GAAGnC,KAAK,CAACoC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAAC/B,KAAvB,CAAZ,CAAf;AACA,QAAII,OAAO,GAAGwB,IAAI,CAACC,GAAL,CAAS,GAAGnC,KAAK,CAACoC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACP,IAAvB,CAAZ,CAAd;AAEA,SAAKJ,QAAL,CAAc;AACV1B,MAAAA,KADU;AACHE,MAAAA,aADG;AACYD,MAAAA,WAAW,EAAED,KADzB;AAEVG,MAAAA,OAAO,EAAE,KAFC;AAEMG,MAAAA,KAAK,EAAEE,QAFb;AAEuBA,MAAAA,QAFvB;AAEiCE,MAAAA;AAFjC,KAAd;AAMH;;AAEDsB,EAAAA,UAAU,CAACtC,KAAD,EAAQ;AACd,WAAOA,KAAK,CAAC0C,GAAN,CAAWC,IAAD,IAAU;AACvB,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAwBM,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAApD,CAAb;AAEA,aAAO,EAAC,GAAGP,IAAI,CAACI,MAAT;AAAiBD,QAAAA,MAAjB;AAAyBF,QAAAA;AAAzB,OAAP;AACH,KALM,CAAP;AAMH;;AA2CDO,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAK9C,KAAT;AAAgBc,QAAAA,OAAO,EAAE,KAAKA,OAA9B;AAAuCK,QAAAA,YAAY,EAAE,KAAKA;AAA1D,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK4B,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAzFsC;;AA4F3C,MAAMC,YAAY,GAAGrD,WAAW,CAACsD,QAAjC;AAEA,OAAO,MAAMC,gBAAgB,GAAIpD,SAAD,IAAe;AAC3C,SAAQgD,KAAD,IAAW;AACd,wBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKzB,KAAK,iBAAI,oBAAC,SAAD,oBAAeyB,KAAf;AAAsB,MAAA,OAAO,EAAEzB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADd,CADJ;AAKH,GAND;AAOH,CARM;AAWP,SAAOxB,YAAP,EAAqBmD,YAArB,EAAmCrD,WAAnC","sourcesContent":["import React from \"react\";\nimport items from './data'\n\nconst RoomContext = React.createContext();\n\n\nclass RoomProvider extends React.Component {\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type: \"all\",\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n    }\n\n    // getData {}\n\n    componentDidMount() {\n        let rooms = this.formatData(items)\n        let featuredRooms = rooms.filter((room) => room.featured === true)\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n\n        this.setState({\n            rooms, featuredRooms, sortedRooms: rooms,\n            loading: false, price: maxPrice, maxPrice, maxSize\n        })\n\n\n    }\n\n    formatData(items) {\n        return items.map((item) => {\n            let id = item.sys.id\n            let images = item.fields.images.map((image) => image.fields.file.url)\n\n            return {...item.fields, images, id}\n        })\n    }\n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        return tempRooms.find(room => room.slug === slug);\n    };\n\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n        console.log(name, value); \n\n        this.setState({ [name]: value }, this.filterRooms );\n    };\n\n    filterRooms = () => {\n        let { rooms, type, capacity, price, minSize, maxSize, breakfast, pets } = this.state;\n\n        let tempRooms = [...rooms];\n        // transform values\n        // get capacity\n        capacity = parseInt(capacity);\n        price = parseInt(price);\n        // filter by type\n        if (type !== \"all\") tempRooms = tempRooms.filter(room => room.type === type);\n\n        // filter by capacity\n        if (capacity !== 1) tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n\n        // filter by price\n        tempRooms = tempRooms.filter( room => room.price <= price );\n        //filter by size\n        tempRooms = tempRooms.filter( room => room.size >= minSize && room.size <= maxSize );\n        //filter by breakfast\n        if (breakfast) tempRooms = tempRooms.filter(room => room.breakfast === true);\n\n        //filter by pets\n        if (pets) tempRooms = tempRooms.filter(room => room.pets === true);\n\n        this.setState({ sortedRooms: tempRooms });\n    };\n\n    render() {\n        return(\n            <RoomContext.Provider value={{...this.state, getRoom: this.getRoom, handleChange: this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer\n\nexport const withRoomConsumer = (Component) => {\n    return (props) => {\n        return (\n            <RoomConsumer>\n                {value => <Component {...props} context={value} /> }\n            </RoomConsumer>\n        )\n    }\n}\n\n\nexport{RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}